import localFont from "next/font/local";
import "./globals.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};



export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        {children}
      </body>
    </html>
  );
}

// import localFont from "next/font/local";
// import "./globals.css";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// // กรองคำเตือนที่เกี่ยวข้องกับ error={false} เฉพาะใน Development Mode
// if (process.env.NODE_ENV === 'development') {
//   const originalConsoleError = console.error;
//   console.error = (...args) => {
//     // คัดกรองข้อความเตือนที่เกี่ยวข้องกับ 'error'
//     if (args[0] && args[0].includes("Received `false` for a non-boolean attribute `error`")) {
//       return; // ข้ามการเตือนที่เกี่ยวกับ error={false}
//     }
//     originalConsoleError(...args); // แสดงข้อความเตือนปกติ
//   };
// }

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({ children }) {
//   return (
//     <html lang="en">
//       <body className={`${geistSans.variable} ${geistMono.variable}`}>
//         {children}
//       </body>
//     </html>
//   );
// }
